{"version":3,"sources":["index.js"],"names":["Square","className","onClick","this","props","value","React","Component","Board","row","startCol","renderBlock","blockSize","startRow","col","renderBlockRow","renderSquare","squares","renderBoardRow","Game","state","Array","fill","map","x","selectValue","slice","setState","handleClick","NumberSelector","handleSelect","parsed","parseInt","classNames","isNaN","index","toString","ReactDOM","render","document","getElementById"],"mappings":"6MAIMA,E,4JACF,WACI,OACI,wBAAQC,UAAU,SAASC,QAASC,KAAKC,MAAMF,QAA/C,SACKC,KAAKC,MAAMC,Y,GAJPC,IAAMC,WAUrBC,E,oKACF,SAAeC,EAAIC,GAEf,OACI,sBAAKT,UAAU,YAAf,UACKE,KAAKQ,YAAYF,EAAIC,GACrBP,KAAKQ,YAAYF,EAAIC,EAASE,GAC9BT,KAAKQ,YAAYF,EAAIC,EAASE,Q,yBAI3C,SAAYC,EAASC,GACjB,OACI,sBAAKb,UAAU,cAAf,UACKE,KAAKY,eAAeF,EAASC,GAC7BX,KAAKY,eAAeF,EAAS,EAAEC,GAC/BX,KAAKY,eAAeF,EAAS,EAAEC,Q,4BAI5C,SAAeL,EAAIC,GACf,OACI,sBAAKT,UAAU,YAAf,UACKE,KAAKa,aAAaP,EAAIC,GACtBP,KAAKa,aAAaP,EAAIC,EAAS,GAC/BP,KAAKa,aAAaP,EAAIC,EAAS,Q,0BAI5C,SAAaD,EAAIK,GAAM,IAAD,OAClB,OACI,cAACd,EAAD,CACIK,MAAOF,KAAKC,MAAMa,QAAQR,GAAKK,GAC/BZ,QAAS,kBAAM,EAAKE,MAAMF,QAAQO,EAAIK,Q,oBAKlD,WACI,OACI,8BACI,sBAAKb,UAAU,YAAf,UACKE,KAAKe,eAAe,EAAE,GACtBf,KAAKe,eAAe,EAAE,GACtBf,KAAKe,eAAe,EAAE,Y,GA5CvBZ,IAAMC,WAmDpBY,E,kDACF,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IACDgB,MAAQ,CACTH,QAASI,MAAM,GAAGC,KAAK,MAAMC,KAAI,SAAAC,GAAC,OAAIH,MAAM,GAAGC,KAAK,SACpDG,YAAa,KAJF,E,+CAOnB,SAAYhB,EAAIK,GACZ,IAAIG,EAAUd,KAAKiB,MAAMH,QAAQS,QACjCT,EAAQR,GAAKK,GAAOX,KAAKiB,MAAMK,YAC/BtB,KAAKwB,UAAS,SAAAP,GAAK,MAAK,CACpBH,QAASA,Q,0BAGjB,SAAaZ,GACTF,KAAKwB,UAAS,SAAAP,GAAK,MAAK,CACpBK,YAAapB,Q,oBAGrB,WAAS,IAAD,OACJ,OACI,sBAAKJ,UAAU,OAAf,UACI,cAACO,EAAD,CACIS,QAASd,KAAKiB,MAAMH,QACpBf,QAAS,SAACO,EAAIK,GAAL,OAAa,EAAKc,YAAYnB,EAAIK,MAE/C,cAACe,EAAD,CAAgBJ,YAAatB,KAAKiB,MAAMK,YAAavB,QAAS,SAACG,GAAD,OAAW,EAAKyB,aAAazB,a,GA3BxFC,IAAMC,WAiCnBsB,E,4JACF,WAAS,IAAD,OACEE,EAASC,SAAS7B,KAAKC,MAAMqB,YAAa,IAC5CQ,EAAaZ,MAAM,IAAIC,KAAK,mBAMhC,OALIY,MAAMH,IAAWA,GAAU,GAAKA,GAAU,GAC1CE,EAAW,IAAM,YAEjBA,EAAWF,IAAW,YAGtB,qBAAK9B,UAAU,sBAAf,SACKgC,EAAWV,KAAI,SAACtB,EAAWkC,GACxB,IAAI9B,EAAiB,IAAR8B,EAAY,IAAMA,EAAMC,WACrC,OACI,wBAAuCnC,UAAWA,EAAWC,QAAS,kBAAM,EAAKE,MAAMF,QAAQG,IAA/F,SAAwGA,GAA3F,mBAAmB8B,Y,GAd3B7B,IAAMC,WAsBnC8B,IAASC,OACL,cAACnB,EAAD,IACAoB,SAASC,eAAe,W","file":"static/js/main.ef1f9f62.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component {\r\n    render(){\r\n        return (\r\n            <button className=\"square\" onClick={this.props.onClick}>\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderBoardRow(row,startCol){\r\n        const blockSize = 3\r\n        return (\r\n            <div className=\"board-row\">\r\n                {this.renderBlock(row,startCol)}\r\n                {this.renderBlock(row,startCol+blockSize*1)}\r\n                {this.renderBlock(row,startCol+blockSize*2)}\r\n            </div>\r\n        ); \r\n    }\r\n    renderBlock(startRow,col){\r\n        return (\r\n            <div className=\"board-block\">\r\n                {this.renderBlockRow(startRow,col)}\r\n                {this.renderBlockRow(startRow+1,col)}\r\n                {this.renderBlockRow(startRow+2,col)}\r\n            </div>\r\n        ); \r\n    }\r\n    renderBlockRow(row,startCol){\r\n        return (\r\n            <div className=\"block-row\">\r\n                {this.renderSquare(row,startCol)}\r\n                {this.renderSquare(row,startCol+1)}\r\n                {this.renderSquare(row,startCol+2)}\r\n            </div>\r\n        ); \r\n    }\r\n    renderSquare(row,col) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[row][col]}\r\n                onClick={() => this.props.onClick(row,col)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderBoardRow(0,0)}\r\n                    {this.renderBoardRow(3,0)}\r\n                    {this.renderBoardRow(6,0)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null).map(x => Array(9).fill(null)),\r\n            selectValue: \" \"\r\n        };\r\n    }\r\n    handleClick(row,col) {\r\n        var squares = this.state.squares.slice();\r\n        squares[row][col] = this.state.selectValue;\r\n        this.setState(state => ({\r\n            squares: squares\r\n        }));\r\n    }\r\n    handleSelect(value) {\r\n        this.setState(state => ({\r\n            selectValue: value\r\n        }));\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"game\">\r\n                <Board \r\n                    squares={this.state.squares}\r\n                    onClick={(row,col) => this.handleClick(row,col)}\r\n                />\r\n                <NumberSelector selectValue={this.state.selectValue} onClick={(value) => this.handleSelect(value)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass NumberSelector extends React.Component {\r\n    render(){\r\n        const parsed = parseInt(this.props.selectValue, 10);\r\n        let classNames = Array(10).fill(\"number-selector\");\r\n        if (isNaN(parsed) || parsed <= 0 || parsed >= 10) {\r\n            classNames[0] += \" selected\"\r\n        }else{\r\n            classNames[parsed] += \" selected\"\r\n        }\r\n        return (\r\n            <div className=\"number-selector-row\">\r\n                {classNames.map((className, index)=> {\r\n                    let value = (index===0)? \" \" : index.toString()\r\n                    return (\r\n                        <button key={\"number-selector-\"+index} className={className} onClick={() => this.props.onClick(value)}>{value}</button>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}