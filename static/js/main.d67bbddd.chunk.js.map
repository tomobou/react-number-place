{"version":3,"sources":["index.js"],"names":["Square","className","onClick","this","props","value","React","Component","Board","row","startCol","renderBlock","blockSize","startRow","col","renderBlockRow","renderSquare","squares","renderBoardRow","Game","state","Array","fill","map","x","selectValue","predictText","slice","setState","prediction","cell","Number","candidates","from","length","_","index","conditions","idx","forEach","element","i","j","createConditions","condition","definiteValues","filter","place","candidate","some","defValue","updateCandidatesForPlaceValue","result","hasPrediction","checkPrediction","console","log","calcCandidates","toString","handleClick","NumberSelector","handleSelect","NextCandidate","handleNextCandidate","parsed","parseInt","classNames","isNaN","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d67bbddd.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component {\r\n    render(){\r\n        return (\r\n            <button className=\"square\" onClick={this.props.onClick}>\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderBoardRow(row,startCol){\r\n        const blockSize = 3\r\n        return (\r\n            <div className=\"board-row\">\r\n                {this.renderBlock(row,startCol)}\r\n                {this.renderBlock(row,startCol+blockSize*1)}\r\n                {this.renderBlock(row,startCol+blockSize*2)}\r\n            </div>\r\n        ); \r\n    }\r\n    renderBlock(startRow,col){\r\n        return (\r\n            <div className=\"board-block\">\r\n                {this.renderBlockRow(startRow,col)}\r\n                {this.renderBlockRow(startRow+1,col)}\r\n                {this.renderBlockRow(startRow+2,col)}\r\n            </div>\r\n        ); \r\n    }\r\n    renderBlockRow(row,startCol){\r\n        return (\r\n            <div className=\"block-row\">\r\n                {this.renderSquare(row,startCol)}\r\n                {this.renderSquare(row,startCol+1)}\r\n                {this.renderSquare(row,startCol+2)}\r\n            </div>\r\n        ); \r\n    }\r\n    renderSquare(row,col) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[row][col]}\r\n                onClick={() => this.props.onClick(row,col)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderBoardRow(0,0)}\r\n                    {this.renderBoardRow(3,0)}\r\n                    {this.renderBoardRow(6,0)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null).map(x => Array(9).fill(null)),\r\n            selectValue: \" \",\r\n            predictText: \"\"\r\n        };\r\n    }\r\n    handleClick(row,col) {\r\n        var squares = this.state.squares.slice();\r\n        squares[row][col] = this.state.selectValue;\r\n        this.setState(state => ({\r\n            squares: squares\r\n        }));\r\n    }\r\n    handleSelect(value) {\r\n        this.setState(state => ({\r\n            selectValue: value\r\n        }));\r\n    }\r\n    handleNextCandidate(){\r\n        let prediction = calcCandidates(this.state.squares)\r\n        if(prediction.hasPrediction){\r\n            let squares = this.state.squares;\r\n            let predictText = \"[\"+(prediction.row+1)+\"]行[\"+(prediction.col+1)+\"]列目は\"+prediction.value+\"です。\"\r\n            squares[prediction.row][prediction.col] = prediction.value.toString()\r\n            this.setState(state => ({\r\n                squares: squares,\r\n                predictText: predictText\r\n            }));\r\n        }else{\r\n            this.setState(state => ({\r\n                predictText: \"次の候補は見つかりませんでした\"\r\n            }));\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"game\">\r\n                <Board \r\n                    squares={this.state.squares}\r\n                    onClick={(row,col) => this.handleClick(row,col)}\r\n                />\r\n                <NumberSelector selectValue={this.state.selectValue} onClick={(value) => this.handleSelect(value)}/>\r\n                <NextCandidate predictText={this.state.predictText} onClick={() => this.handleNextCandidate()}></NextCandidate>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calcCandidates(squares){\r\n    let prediction = squares.map(function(row){\r\n        return row.map(function(cell) {\r\n            let value = (\"1\"<=cell&&cell<=\"9\")? Number(cell) : null;\r\n            let candidates = (\"1\"<=cell&&cell<=\"9\")? [] : Array.from({length: 9}, (_, index) => index+1);\r\n            return { \r\n                value: value,\r\n                candidates: candidates\r\n            }\r\n        })\r\n    })\r\n    let conditions = createConditions(prediction)\r\n    updateCandidatesForPlaceValue(conditions)\r\n\r\n    let result = checkPrediction(prediction)\r\n    if(result.hasPrediction){\r\n        return result\r\n    }\r\n\r\n    console.log(prediction)\r\n    console.log(conditions)\r\n\r\n\r\n    return {\r\n        hasPrediction: false\r\n    }\r\n}\r\n\r\nfunction checkPrediction(prediction){\r\n    for(let i = 0; i < 9; i++){\r\n        for(let j = 0; j < 9; j++){\r\n            let candidates = prediction[i][j].candidates\r\n            if(prediction[i][j].candidates.length === 1){\r\n                return {\r\n                    hasPrediction: true,\r\n                    row: i,\r\n                    col: j,\r\n                    value: candidates[0]\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        hasPrediction: false\r\n    }\r\n}\r\n\r\nfunction updateCandidatesForPlaceValue(conditions){     \r\n    conditions.forEach(condition => {\r\n        let definiteValues = condition.filter(place => place.value !== null).map(place => place.value)\r\n        condition.forEach(place => {\r\n            place.candidates = place.candidates.filter((candidate) => !definiteValues.some((defValue) => candidate === defValue))\r\n        })\r\n    });\r\n}\r\n\r\nfunction createConditions(prediction){\r\n    let conditions = Array(27)\r\n    let idx = 0\r\n    //row conditions\r\n    prediction.forEach(element => {\r\n        conditions[idx++] = element\r\n    });\r\n    //column conditions\r\n    for(let i = 0; i < 9; i++){\r\n        conditions[idx++] = prediction.map(row => row[i])\r\n    }\r\n    // block conditions\r\n    for(let i = 0; i < 9; i=i+3){\r\n        for(let j = 0; j < 9; j=j+3){\r\n            conditions[idx++] = [\r\n                prediction[i][j],\r\n                prediction[i][j+1],\r\n                prediction[i][j+2],\r\n                prediction[i+1][j],\r\n                prediction[i+1][j+1],\r\n                prediction[i+1][j+2],\r\n                prediction[i+2][j],\r\n                prediction[i+2][j+1],\r\n                prediction[i+2][j+2],\r\n            ]\r\n        }\r\n    }\r\n    return conditions\r\n}\r\n\r\n\r\nfunction NextCandidate(props){\r\n    return (\r\n        <div>\r\n        <button onClick={props.onClick}>next</button>\r\n        <span>{props.predictText}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass NumberSelector extends React.Component {\r\n    render(){\r\n        const parsed = parseInt(this.props.selectValue, 10);\r\n        let classNames = Array(10).fill(\"number-selector\");\r\n        if (isNaN(parsed) || parsed <= 0 || parsed >= 10) {\r\n            classNames[0] += \" selected\"\r\n        }else{\r\n            classNames[parsed] += \" selected\"\r\n        }\r\n        return (\r\n            <div className=\"number-selector-row\">\r\n                {classNames.map((className, index)=> {\r\n                    let value = (index===0)? \" \" : index.toString()\r\n                    return (\r\n                        <button key={\"number-selector-\"+index} className={className} onClick={() => this.props.onClick(value)}>{value}</button>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}